---
    - name: execute zero downtime rolling update for 2 webservers behind a loadbalancer on a target VNET in the UK west region
      hosts: localhost
      debugger: on_failed
      gather_facts: yes
      tasks:

        - name: get PWD
          set_fact:
            pwd: "{{ lookup('env','PWD') }}"

        - name: create path to customdata
          set_fact:
            custom_data_pth: "{{ pwd }}/files/vm-custom-data.sh"

        - name: create path to ssh key
          set_fact:
            ssh_key_pth: "{{ pwd }}/files/cloudex-eu-west-1.pem"

        - name: create 2 private NICs for the new VMs
          azure_rm_networkinterface:
            resource_group: cloudexRG
            name: "{{ item.name }}"
            virtual_network_name: "{{ VNET_NAME }}"
            subnet_name: 'cloudex_public'
            security_group: websg
            ip_configurations:
              - name: "{{ item.confname }}"
                primary: yes
                load_balancer_backend_address_pools:
                  - name: backendaddrpool
                    load_balancer: cloudexLB
            state: present
          with_items:
            - { name: 'cloudex_private_nic_3', confname: 'private_conf_3'}
            - { name: 'cloudex_private_nic_4', confname: 'private_conf_4'}
          register: new_priv_nics_up

        - debug: var=new_priv_nics_up
        
        - name: standup 2 new VMs and add them to the AS
          azure_rm_virtualmachine:
            resource_group: cloudexRG
            name: "{{ item.vm }}"
            custom_data: "{{ lookup('file', '{{ custom_data_pth }}') }}"
            vm_size: Standard_B1s
            availability_set: cloudexAS
            network_interfaces: "{{ item.nic }}"
            admin_username: cloudex
            ssh_password_enabled: no
            ssh_public_keys:
            - path: /home/cloudex/.ssh/authorized_keys
              key_data: "{{ lookup('file', '{{ ssh_key_pth }}') }}"
            image:
              offer: UbuntuServer
              publisher: Canonical
              sku: '18.04-LTS'
              version: latest
            state: present
          with_items:
            - { nic: 'cloudex_private_nic_3', vm: 'webvm3' }
            - { nic: 'cloudex_private_nic_4', vm: 'webvm4'}
          register: new_servers_up

        - debug: var=new_servers_up


        - name: pause for 3 minutes to ensure servers fully up
          pause:
            minutes: 3

        - name: delete one existing VM and associated resources
          azure_rm_virtualmachine:
            resource_group: cloudexRG
            name: 'webvm_1'
            remove_on_absent: all_autocreated
            state: absent
          register: webvm_1_down

        - debug: var=webvm_1_down

        - name: update one private NIC to join the LB
          azure_rm_networkinterface:
            resource_group: cloudexRG
            name: 'cloudex_private_nic_3'
            virtual_network_name: "{{ VNET_NAME }}"
            subnet_name: 'cloudex_public'
            security_group: websg
            ip_configurations:
              - name: 'private_conf_3'
                primary: yes
                load_balancer_backend_address_pools:
                  - name: backendaddrpool
                    load_balancer: cloudexLB
            state: present
          register: vm3_nic_up

        - debug: var=vm3_nic_up

        - name: pause for 1 minute to ensure NIC fully up
          pause:
            minutes: 1

        - name: delete one existing VM and associated resources
          azure_rm_virtualmachine:
            resource_group: cloudexRG
            name: 'webvm_2'
            remove_on_absent: all_autocreated
            state: absent
          register: webvm_2_down

        - debug: var=webvm_2_down

        - name: update one private NIC to join the LB
          azure_rm_networkinterface:
            resource_group: cloudexRG
            name: 'cloudex_private_nic_4'
            virtual_network_name: "{{ VNET_NAME }}"
            subnet_name: 'cloudex_public'
            security_group: websg
            ip_configurations:
              - name: 'private_conf_4'
                primary: yes
                load_balancer_backend_address_pools:
                  - name: backendaddrpool
                    load_balancer: cloudexLB
            state: present
          register: vm4_nic_up

        - debug: var=vm4_nic_up

        - name: pause for 1 minute to ensure NIC fully up
          pause:
            minutes: 1

        - name: teardown the old private NICs
          azure_rm_networkinterface:
            resource_group: cloudexRG
            name: "{{ item }}"
            state: absent
          with_items:
            - 'cloudex_private_nic_1'
            - 'cloudex_private_nic_2'
          register: old_nics_down

        - debug: var=old_nics_down
